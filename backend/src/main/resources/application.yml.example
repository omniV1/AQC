spring:
  application:
    name: lunara-api
  datasource:
    url: jdbc:postgresql://localhost:5432/${POSTGRES_DB:lunara_db}
    username: ${POSTGRES_USER:Owen}
    password: ${POSTGRES_PASSWORD:omni}
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.PostgreSQLDialect
    database: postgresql
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    generate-ddl: false
    defer-datasource-initialization: false
    open-in-view: false
  flyway:
    enabled: true
    baseline-on-migrate: true
    locations: classpath:db/migration
    validate-on-migrate: true
    clean-on-validation-error: true
    clean-disabled: false
    clean-on-startup: true
    baseline-version: 0

# JWT Configuration
security:
  jwt:
    secret: ${JWT_SECRET:changeme}
    expiration: ${JWT_EXPIRATION:86400000}
    refresh-token:
      expiration: 604800000 # 7 days in milliseconds

# Server Configuration
server:
  port: ${SERVER_PORT:8080}
  error:
    include-message: always
    include-binding-errors: always
  servlet:
    context-path: /api
  cors:
    allowed-origins: ${CORS_ALLOWED_ORIGINS:http://localhost:5173}
    allowed-methods: GET,POST,PUT,DELETE,OPTIONS
    allowed-headers: "*"
    allow-credentials: true

springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html
    enabled: true

lunara:
  security:
    provider-registration-code: ${LUNARA_PROVIDER_REGISTRATION_CODE:LUNARA2024}
    jwt:
      secret-key: ${LUNARA_SECURITY_JWT_SECRET_KEY:changeme}
      expiration: 86400000 # 24 hours in milliseconds 